// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Quiz202320.gold"
import gold.structures.automaton.*;
import gold.structures.map.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Quiz202320 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=7;
      Object c=$fix(Quiz202320.createCoder());
      $line=8;
      Object d=$fix(Quiz202320.createDecoder());
      $line=9;
      Utilities.testCodeDecode($cast(gold.structures.automaton.ITransducer.class,c),$cast(gold.structures.automaton.ITransducer.class,d));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"main",$line);
    }
  }
  public static ITransducer createCoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=17;
      Object Q=$fix($opUnionY(GCollections.asSet("I","F","E"),$opCartsY(new Object[]{$opIntvlY('a','z'),$opIntvlY(0,2)})));
      $line=19;
      Object \u03A3=$fix($opUnionY($opIntvlY('a','z'),GCollections.asSet(' ','$')));
      $line=20;
      Object Out=$fix($opUnionY($opUnionY($opIntvlY('0','2'),$opIntvlY('a','z')),GCollections.asSet('$','*')));
      $line=22;
      Object q_0=$fix("I");
      $line=23;
      Object F=$fix(GCollections.asSet("F"));
      $line=24;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,Out,q_0,F,new GMethod(Quiz202320.class,"\u03B4"),new GMethod(Quiz202320.class,"g"),new GMethod(Quiz202320.class,"h")});
      if (true) break $try;
      $line=25;
      $rethrow(new RuntimeException("The function \"createCoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"createCoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static ITransducer createDecoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=30;
      Object Q=$fix($opUnionY(GCollections.asSet("I","F","E"),$opCartsY(new Object[]{$opIntvlY('a','z'),$opIntvlY(0,2)})));
      $line=32;
      Object In=$fix($opUnionY($opUnionY($opIntvlY('0','2'),$opIntvlY('a','z')),GCollections.asSet('$','*')));
      $line=33;
      Object Out=$fix($opUnionY($opIntvlY('a','z'),GCollections.asSet(' ','$')));
      $line=37;
      Object q_0=$fix("I");
      $line=38;
      Object F=$fix(GCollections.asSet("I"));
      $line=39;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,In,Out,q_0,F,new GMethod(Quiz202320.class,"\u03B41"),new GMethod(Quiz202320.class,"g1"),new GMethod(Quiz202320.class,"h1")});
      if (true) break $try;
      $line=40;
      $rethrow(new RuntimeException("The function \"createDecoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"createDecoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=44;
      if (($opEqualY(q,"I")&&$opEqualY(s,'$'))) {
        $line=44;
        $result="F";
        if (true) break $try;
      }
      else {
        $line=45;
        if (($opEqualY(q,"I")&&$opMembrY(s,$opIntvlY('a','z')))) {
          $line=45;
          $result=GCollections.asList(s,0);
          if (true) break $try;
        }
        else {
          $line=46;
          $result="E";
          if (true) break $try;
        }
      }
      $line=49;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object \u03B4(java.lang.Iterable $v1, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v2=GCollections.unmodifiableCollection($v1).iterator();
      Object first=$v2.next();
      Object count=$v2.next();
      $line=52;
      if ($opEqualY(s,'$')) {
        $line=52;
        $result="F";
        if (true) break $try;
      }
      else {
        $line=54;
        if ($opEqualY(s,' ')) {
          $line=54;
          $result="I";
          if (true) break $try;
        }
        else {
          $line=57;
          if ($opEqualY(s,first)) {
            $line=57;
            $result=GCollections.asList(first,$opModulY($opAdditY(count,1),3));
            if (true) break $try;
          }
          else {
            $line=58;
            $result=GCollections.asList(first,count);
            if (true) break $try;
          }
        }
      }
      $line=61;
      $rethrow(new RuntimeException("The function \"\u03B4(\u27E8first,count\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=64;
      if (($opEqualY(q,"I")&&$opEqualY(s,'$'))) {
        $line=64;
        $result=s;
        if (true) break $try;
      }
      else {
        $line=65;
        if (($opEqualY(q,"I")&&$opMembrY(s,$opIntvlY('a','z')))) {
          $line=65;
          $result=s;
          if (true) break $try;
        }
        else {
          $line=66;
          $result="";
          if (true) break $try;
        }
      }
      $line=69;
      $rethrow(new RuntimeException("The function \"h(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"h",$line);
    }
    return $result;
  }
  public static Object h(java.lang.Iterable $v3, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v4=GCollections.unmodifiableCollection($v3).iterator();
      Object first=$v4.next();
      Object count=$v4.next();
      $line=72;
      if ($opEqualY(s,'$')) {
        $line=72;
        $result=$opAdditY($opAdditY("",count),"$");
        if (true) break $try;
      }
      else {
        $line=74;
        if ($opEqualY(s,' ')) {
          $line=74;
          $result=$opAdditY("",count);
          if (true) break $try;
        }
        else {
          $line=77;
          if ($opEqualY(s,first)) {
            $line=77;
            $result="*";
            if (true) break $try;
          }
          else {
            $line=78;
            $result=s;
            if (true) break $try;
          }
        }
      }
      $line=81;
      $rethrow(new RuntimeException("The function \"h(\u27E8first,count\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"h",$line);
    }
    return $result;
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=84;
      $result="";
      if (true) break $try;
      $line=85;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"g",$line);
    }
    return $result;
  }
  public static Object g1(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=88;
      $result="";
      if (true) break $try;
      $line=89;
      $rethrow(new RuntimeException("The function \"g1(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"g1",$line);
    }
    return $result;
  }
  public static Object \u03B41(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=93;
      if (($opEqualY(q,"I")&&$opEqualY(s,'$'))) {
        $line=93;
        $result="F";
        if (true) break $try;
      }
      else {
        $line=94;
        if (($opEqualY(q,"I")&&$opMembrY(s,$opIntvlY('a','z')))) {
          $line=94;
          $result=GCollections.asList(s,0);
          if (true) break $try;
        }
        else {
          $line=95;
          $result="E";
          if (true) break $try;
        }
      }
      $line=98;
      $rethrow(new RuntimeException("The function \"\u03B41(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"\u03B41",$line);
    }
    return $result;
  }
  public static Object \u03B41(java.lang.Iterable $v5, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v6=GCollections.unmodifiableCollection($v5).iterator();
      Object first=$v6.next();
      Object count=$v6.next();
      $line=101;
      if ($opEqualY(s,'$')) {
        $line=101;
        $result="F";
        if (true) break $try;
      }
      else {
        $line=103;
        if ($opMembrY(s,$opIntvlY('0','2'))) {
          $line=103;
          $result="I";
          if (true) break $try;
        }
        else {
          $line=106;
          if ($opEqualY(s,'*')) {
            $line=106;
            $result=GCollections.asList(first,$opModulY($opAdditY(count,1),3));
            if (true) break $try;
          }
          else {
            $line=107;
            $result=GCollections.asList(first,count);
            if (true) break $try;
          }
        }
      }
      $line=109;
      $rethrow(new RuntimeException("The function \"\u03B41(\u27E8first,count\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"\u03B41",$line);
    }
    return $result;
  }
  public static Object h1(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=113;
      if (($opEqualY(q,"I")&&$opEqualY(s,'$'))) {
        $line=113;
        $result=s;
        if (true) break $try;
      }
      else {
        $line=114;
        if (($opEqualY(q,"I")&&$opMembrY(s,$opIntvlY('a','z')))) {
          $line=114;
          $result=s;
          if (true) break $try;
        }
        else {
          $line=115;
          $result="";
          if (true) break $try;
        }
      }
      $line=118;
      $rethrow(new RuntimeException("The function \"h1(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"h1",$line);
    }
    return $result;
  }
  public static Object h1(java.lang.Iterable $v7, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v8=GCollections.unmodifiableCollection($v7).iterator();
      Object first=$v8.next();
      Object count=$v8.next();
      $line=120;
      if ($opEqualY(s,'$')) {
        $line=120;
        $result='$';
        if (true) break $try;
      }
      else {
        $line=122;
        if ($opEqualY(s,'*')) {
          $line=122;
          $result=first;
          if (true) break $try;
        }
        else {
          $line=125;
          if ($opMembrY(s,$opIntvlY('0','2'))) {
            $line=125;
            $result=' ';
            if (true) break $try;
          }
          else {
            $line=126;
            $result=s;
            if (true) break $try;
          }
        }
      }
      $line=128;
      $rethrow(new RuntimeException("The function \"h1(\u27E8first,count\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Quiz202320.class,"h1",$line);
    }
    return $result;
  }
}
